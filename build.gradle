buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0-beta3'

        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def applyProperty(Properties p, String id, String var, String defValue) {
    if (!p.containsKey(id))
        p[id] = defValue;

    if (var != null && var != '' && p[id] != var) {
        p[id] = var;
        return true;
    }

    return false;
}

def getVersionCode(String version) {
    def matcher = version =~ /(\d+).(\d+).(\d+)/;

    if (!matcher.matches())
        return 1;

    return String.format('%d%02d%04d', matcher.group(1).toInteger(), matcher.group(2).toInteger(), matcher.group(3).toInteger()).toInteger();
}

def getBuildProperties() {
    def Properties p = new Properties()
    def File f = file('build.properties');

    if (f.exists()) {
        FileInputStream fis = new FileInputStream(f);
        p.load(fis);
        fis.close();
    }

    def res = applyProperty(p, 'test.acc.url', pTestUrl, '');
    res = applyProperty(p, 'test.acc.login', pTestUser, '') || res;
    res = applyProperty(p, 'test.acc.pwd', pTestPwd, '') || res;

    if (res) {
        FileOutputStream fos = new FileOutputStream(f);
        p.store(fos, null);
        fos.close();
    }

    applyProperty(p, 'ods.sign.password', pSignPwd, '');
    applyProperty(p, 'ods.key.fabric', pKeyFabric, '');
    applyProperty(p, 'ods.repo.user', pRepoUser, '');
    applyProperty(p, 'ods.repo.password', pRepoPwd, '');
    applyProperty(p, 'ods.app.version', pAppVersion, '');
    applyProperty(p, 'ods.build.tools', pBuildTools, '24.0.1');

    return p;
}

def Properties props = getBuildProperties();

android {
    compileSdkVersion 'android-24'
    buildToolsVersion props['ods.build.tools']

    signingConfigs {
        release {
            storeFile file('keystore')
            keyAlias 'beta'
            storePassword props['ods.sign.password']
            keyPassword props['ods.sign.password']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 24
        versionCode getVersionCode(props['ods.app.version'].toString())
        versionName props['ods.app.version']
        resConfigs 'en', 'de', 'fr'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        manifestPlaceholders = ['ods.key.fabric': props['ods.key.fabric']]

        jackOptions {
            enabled true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'com/j256/ormlite/android/LICENSE.txt'
        exclude 'com/j256/ormlite/android/README.txt'
        exclude 'com/j256/ormlite/core/LICENSE.txt'
        exclude 'com/j256/ormlite/core/README.txt'
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            File apk = output.outputFile;
            String newName = apk.name.replace('.apk', '-' + defaultConfig.versionName.toString() + '.apk');
            output.outputFile = new File(apk.parentFile, newName);
        }
    }
}

project.archivesBaseName = 'ods-android'

repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }

    maven {
        url "https://artifactory.dataspace.cc/artifactory/libs-release"

        credentials {
            username props['ods.repo.user']
            password props['ods.repo.password']
        }
    }

    maven {
        url pBranchRepo1

        credentials {
            username props['ods.repo.user']
            password props['ods.repo.password']
        }
    }

    maven {
        url pBranchRepo2

        credentials {
            username props['ods.repo.user']
            password props['ods.repo.password']
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:24.1.1'
    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.android.support:cardview-v7:24.1.1'
    compile 'com.android.support:design:24.1.1'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'org.slf4j:slf4j-android:1.7.7'
    compile 'com.crashlytics.sdk.android:crashlytics:2.6.1'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.squareup.picasso:picasso:2.5.2'

    //noinspection GradleDynamicVersion
    compile 'org.apache.chemistry.opencmis:chemistry-opencmis-android-client:+'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'
    testCompile 'org.robolectric:robolectric:3.1.1'
}
